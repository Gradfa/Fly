-- SimpleFlyModule.lua
local SimpleFly = {}

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local flying = false
local flySpeed = 50

local bodyVelocity = Instance.new("BodyVelocity")
bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
bodyVelocity.Velocity = Vector3.new(0, 0, 0)
bodyVelocity.Parent = rootPart

function SimpleFly:SetSpeed(speed)
    flySpeed = speed
end

function SimpleFly:Toggle()
    flying = not flying
    if not flying then
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    end
end

-- Optional: explicit start/stop
function SimpleFly:Start()
    flying = true
end

function SimpleFly:Stop()
    flying = false
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
end

-- Connect key F to toggle fly automatically if you want
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F then
        SimpleFly:Toggle()
    end
end)

RunService.RenderStepped:Connect(function()
    if flying then
        local moveDirection = humanoid.MoveDirection
        local velocity = Vector3.new(moveDirection.X * flySpeed, 0, moveDirection.Z * flySpeed)
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            velocity = velocity + Vector3.new(0, flySpeed, 0)
        elseif UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
            velocity = velocity - Vector3.new(0, flySpeed, 0)
        end
        bodyVelocity.Velocity = velocity
    else
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    end
end)

return SimpleFly
